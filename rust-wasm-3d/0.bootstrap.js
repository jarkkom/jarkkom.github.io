(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/canvas_wasm_test.js":
/*!**********************************!*\
  !*** ../pkg/canvas_wasm_test.js ***!
  \**********************************/
/*! exports provided: CanvasRenderer, __wbg_new_59cb74e423758ede, __wbg_stack_558ba5917b466edd, __wbg_error_4bb6c2a97407129a, __wbindgen_object_drop_ref, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CanvasRenderer\", function() { return CanvasRenderer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_59cb74e423758ede\", function() { return __wbg_new_59cb74e423758ede; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_stack_558ba5917b466edd\", function() { return __wbg_stack_558ba5917b466edd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_4bb6c2a97407129a\", function() { return __wbg_error_4bb6c2a97407129a; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./canvas_wasm_test_bg.wasm */ \"../pkg/canvas_wasm_test_bg.wasm\");\n\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory = new Uint8Array(_canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm(arg) {\n    const ptr = _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet passStringToWasm;\nif (typeof cachedTextEncoder.encodeInto === 'function') {\n    passStringToWasm = function(arg) {\n\n\n        let size = arg.length;\n        let ptr = _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            arg = arg.slice(offset);\n            ptr = _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"](ptr, size, size = offset + arg.length * 3);\n            const view = getUint8Memory().subarray(ptr + offset, ptr + size);\n            const ret = cachedTextEncoder.encodeInto(arg, view);\n\n            offset += ret.written;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n} else {\n    passStringToWasm = function(arg) {\n\n\n        let size = arg.length;\n        let ptr = _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            const buf = cachedTextEncoder.encode(arg.slice(offset));\n            ptr = _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"](ptr, size, size = offset + buf.length);\n            getUint8Memory().set(buf, ptr + offset);\n            offset += buf.length;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet cachegetInt32Memory = null;\nfunction getInt32Memory() {\n    if (cachegetInt32Memory === null || cachegetInt32Memory.buffer !== _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetInt32Memory = new Int32Array(_canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetInt32Memory;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n*/\nclass CanvasRenderer {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CanvasRenderer.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_canvasrenderer_free\"](ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        const ret = _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"canvasrenderer_width\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        const ret = _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"canvasrenderer_height\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    buffer() {\n        const ret = _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"canvasrenderer_buffer\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {CanvasRenderer}\n    */\n    static new() {\n        const ret = _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"canvasrenderer_new\"]();\n        return CanvasRenderer.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    */\n    setCameraTarget(x, y, z) {\n        _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"canvasrenderer_setCameraTarget\"](this.ptr, x, y, z);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    */\n    setCameraPosition(x, y, z) {\n        _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"canvasrenderer_setCameraPosition\"](this.ptr, x, y, z);\n    }\n    /**\n    * @param {Uint8Array} data\n    * @param {number} width\n    * @param {number} height\n    */\n    setTexture(data, width, height) {\n        _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"canvasrenderer_setTexture\"](this.ptr, passArray8ToWasm(data), WASM_VECTOR_LEN, width, height);\n    }\n    /**\n    */\n    render() {\n        _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"canvasrenderer_render\"](this.ptr);\n    }\n    /**\n    * @param {string} x\n    */\n    add_obj(x) {\n        _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"canvasrenderer_add_obj\"](this.ptr, passStringToWasm(x), WASM_VECTOR_LEN);\n    }\n}\n\nconst __wbg_new_59cb74e423758ede = function() {\n    const ret = new Error();\n    return addHeapObject(ret);\n};\n\nconst __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ret0 = passStringToWasm(ret);\n    const ret1 = WASM_VECTOR_LEN;\n    getInt32Memory()[arg0 / 4 + 0] = ret0;\n    getInt32Memory()[arg0 / 4 + 1] = ret1;\n};\n\nconst __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    const v0 = getStringFromWasm(arg0, arg1).slice();\n    _canvas_wasm_test_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](arg0, arg1 * 1);\n    console.error(v0);\n};\n\nconst __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack:///../pkg/canvas_wasm_test.js?");

/***/ }),

/***/ "../pkg/canvas_wasm_test_bg.wasm":
/*!***************************************!*\
  !*** ../pkg/canvas_wasm_test_bg.wasm ***!
  \***************************************/
/*! exports provided: memory, __wbg_canvasrenderer_free, canvasrenderer_width, canvasrenderer_height, canvasrenderer_buffer, canvasrenderer_new, canvasrenderer_setCameraTarget, canvasrenderer_setCameraPosition, canvasrenderer_setTexture, canvasrenderer_render, canvasrenderer_add_obj, __wbindgen_malloc, __wbindgen_realloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./canvas_wasm_test.js */ \"../pkg/canvas_wasm_test.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/canvas_wasm_test_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var canvas_wasm_test__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! canvas-wasm-test */ \"../pkg/canvas_wasm_test.js\");\n/* harmony import */ var canvas_wasm_test_canvas_wasm_test_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! canvas-wasm-test/canvas_wasm_test_bg */ \"../pkg/canvas_wasm_test_bg.wasm\");\n\n\n\n\n\nconst renderer = canvas_wasm_test__WEBPACK_IMPORTED_MODULE_0__[\"CanvasRenderer\"].new();\nconst w = renderer.width();\nconst h = renderer.height();\n\nconst canvas = document.getElementById('canvas');\ncanvas.width = w;\ncanvas.height = h;\n\nconst ctx = canvas.getContext('2d');\n\nlet frame = 0;\n\nconst loop = () => {\n    renderer.setCameraPosition(\n        Math.cos(2 * Math.PI * frame / 512) * 350,\n        150 + Math.sin(2 * Math.PI * frame / 512),\n        Math.sin(2 * Math.PI * frame / 512) * 350);\n    renderer.setCameraTarget(0, 100, 0);\n    renderer.render();\n    frame++;\n\n    const bufferPtr = renderer.buffer();\n    const buffer = new Uint8ClampedArray(canvas_wasm_test_canvas_wasm_test_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, bufferPtr, w * h * 4);\n    const imageData = new ImageData(buffer, w, h);\n    ctx.putImageData(imageData, 0, 0);\n    requestAnimationFrame(loop);\n}\n\nconst cubeObject = fetch('models/cube.obj').then((resp) => resp.text());\nconst catsObject = fetch('models/cats.obj').then((resp) => resp.text());\nconst torusObject = fetch('models/torus.obj').then((resp) => resp.text());\nconst teapotObject = fetch('models/teapot.obj').then((resp) => resp.text());\nconst stoneObject = fetch('models/stone.obj').then((resp) => resp.text());\n\nconst rustTexture = new Promise((resolve, reject) => {\n    const img = new Image();\n    img.src = 'models/envmap2.jpg';\n\n    img.onload = () => {\n        const tmp = document.createElement('canvas');\n        tmp.width = img.naturalWidth;\n        tmp.height = img.naturalHeight;\n\n        const ctx = tmp.getContext('2d');\n        ctx.drawImage(img, 0, 0);\n\n        resolve(ctx.getImageData(0, 0, tmp.width, tmp.height));\n    };\n});\n\nconst objs = [catsObject, rustTexture];\n\nPromise.all(objs).then((values) => {\n    renderer.add_obj(values[0]);\n    console.log(values[1]);\n    renderer.setTexture(values[1].data, values[1].width, values[1].height);\n    // renderer.add_obj(values[2]);\n    loop();\n}).catch((reason) => {\n    console.log(reason);\n});\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);